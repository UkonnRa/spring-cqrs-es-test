syntax = "proto3";

package endpoint.v1;

option java_multiple_files = false;
option java_package = "com.ukonnra.springcqrsestest.endpoint.grpc.proto";
option java_outer_classname = "JournalProto";

import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";
import "endpoint/v1/shared.proto";

message Journal {
  string id = 1;
  google.protobuf.Timestamp created_date = 2;
  uint32 version = 3;
  google.protobuf.Timestamp deleted_date = 4;

  string name = 5;
  repeated string admins = 6;
  repeated string members = 7;
  repeated string tags = 8;
  Permission permission = 9;
}

message JournalQuery {
  repeated string id = 1;
  repeated string admin_id = 2;
  repeated string member_id = 3;
  repeated string tag = 4;
  string full_text = 5;
}

message JournalServiceFindOneRequest {
  JournalQuery query = 1;
}

message JournalServiceFindOneResponse {
  Journal value = 1;
}

message JournalServiceFindAllRequest {
  JournalQuery query = 1;
  uint32 size = 2;
}

message JournalServiceFindAllResponse {
  repeated Journal values = 1;
}

message JournalCommandCreate {
  string name = 1;
  repeated string admins = 2;
  repeated string members = 3;
  repeated string tags = 4;
}

message JournalCommandUpdate {
  string id = 1;
  string name = 2;
  repeated string admins = 3;
  google.protobuf.ListValue members = 4;
  google.protobuf.ListValue tags = 5;
}

message JournalCommandDelete {
  string id = 1;
}

message JournalCommandBatch {
  repeated JournalCommandCreate create = 1;
  repeated JournalCommandUpdate update = 2;
  repeated string delete = 3;
}

message JournalServiceHandleCommandRequest {
  oneof command {
    JournalCommandCreate create = 1;
    JournalCommandUpdate update = 2;
    JournalCommandDelete delete = 3;
    JournalCommandBatch batch = 4;
  }
}

message JournalServiceHandleCommandResponse {

}

service JournalService {
  rpc FindOne(JournalServiceFindOneRequest) returns (JournalServiceFindOneResponse);
  rpc FindAll(JournalServiceFindAllRequest) returns (JournalServiceFindAllResponse);
  rpc HandleCommand(JournalServiceHandleCommandRequest) returns (JournalServiceHandleCommandResponse);
}
